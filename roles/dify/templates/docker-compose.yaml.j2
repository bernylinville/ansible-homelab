# Dify Docker Compose Configuration
# Generated by Ansible for {{ ansible_hostname }}
# Generated at: {{ ansible_date_time.iso8601 }}

x-shared-env: &shared-api-worker-env
  # 基础配置
  LANG: {{ dify_env.LANG }}
  LC_ALL: {{ dify_env.LC_ALL }}
  PYTHONIOENCODING: {{ dify_env.PYTHONIOENCODING | default('utf-8') }}
  LOG_LEVEL: {{ dify_env.LOG_LEVEL | default('INFO') }}
  DEBUG: {{ dify_env.DEBUG }}
  FLASK_DEBUG: {{ dify_env.FLASK_DEBUG | default('false') }}
  SECRET_KEY: {{ dify_env.SECRET_KEY }}
  INIT_PASSWORD: {{ dify_env.INIT_PASSWORD }}
  DEPLOY_ENV: {{ dify_env.DEPLOY_ENV }}
  
  # 数据库配置
  DB_USERNAME: {{ dify_env.DB_USERNAME }}
  DB_PASSWORD: {{ dify_env.DB_PASSWORD }}
  DB_HOST: {{ dify_env.DB_HOST }}
  DB_PORT: {{ dify_env.DB_PORT }}
  DB_DATABASE: {{ dify_env.DB_DATABASE }}
  
  # Redis 配置
  REDIS_HOST: {{ dify_env.REDIS_HOST }}
  REDIS_PORT: {{ dify_env.REDIS_PORT }}
  REDIS_PASSWORD: {{ dify_env.REDIS_PASSWORD }}
  REDIS_DB: {{ dify_env.REDIS_DB }}
  CELERY_BROKER_URL: {{ dify_env.CELERY_BROKER_URL }}
  
  # 存储配置
  STORAGE_TYPE: {{ dify_env.STORAGE_TYPE }}
  
  # 向量数据库配置
  VECTOR_STORE: {{ dify_env.VECTOR_STORE }}
  WEAVIATE_ENDPOINT: {{ dify_env.WEAVIATE_ENDPOINT }}
  WEAVIATE_API_KEY: {{ dify_env.WEAVIATE_API_KEY }}
  
  # Sandbox 配置
  CODE_EXECUTION_ENDPOINT: {{ dify_env.CODE_EXECUTION_ENDPOINT }}
  CODE_EXECUTION_API_KEY: {{ dify_env.CODE_EXECUTION_API_KEY }}
  SANDBOX_API_KEY: {{ dify_env.SANDBOX_API_KEY }}
  
  # Plugin 配置
  PLUGIN_DAEMON_URL: {{ dify_env.PLUGIN_DAEMON_URL }}
  PLUGIN_DAEMON_KEY: {{ dify_env.PLUGIN_DAEMON_KEY }}
  PLUGIN_DIFY_INNER_API_KEY: {{ dify_env.PLUGIN_DIFY_INNER_API_KEY }}
  PLUGIN_MAX_PACKAGE_SIZE: {{ dify_env.PLUGIN_MAX_PACKAGE_SIZE }}
  FORCE_VERIFYING_SIGNATURE: {{ dify_env.FORCE_VERIFYING_SIGNATURE }}

networks:
  dify_default:
    driver: bridge
  ssrf_proxy_network:
    driver: bridge

volumes:
  dify_app_storage:
    driver: local
  dify_db_data:
    driver: local
  dify_redis_data:
    driver: local

services:
  # PostgreSQL 数据库
  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_PASSWORD: {{ dify_env.POSTGRES_PASSWORD }}
      POSTGRES_DB: {{ dify_env.POSTGRES_DB }}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - dify_db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - dify_default

  # Redis 缓存
  redis:
    image: redis:6-alpine
    restart: always
    command: redis-server --requirepass {{ dify_env.REDIS_PASSWORD }}
    volumes:
      - dify_redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30
    networks:
      - dify_default

  # Dify API 服务
  api:
    image: langgenius/dify-api:{{ dify_version }}
    restart: always
    environment:
      <<: *shared-api-worker-env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - dify_app_storage:/app/api/storage
    networks:
      - dify_default
      - ssrf_proxy_network

  # Dify Worker 服务
  worker:
    image: langgenius/dify-api:{{ dify_version }}
    restart: always
    command: celery -A app.celery worker -P gevent -c 1 --loglevel INFO -Q dataset,generation,mail,ops_trace,app_deletion
    environment:
      <<: *shared-api-worker-env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - dify_app_storage:/app/api/storage
    networks:
      - dify_default
      - ssrf_proxy_network

  # Dify Worker Beat 服务
  worker_beat:
    image: langgenius/dify-api:{{ dify_version }}
    restart: always
    command: celery -A app.celery beat --loglevel INFO
    environment:
      <<: *shared-api-worker-env
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - dify_app_storage:/app/api/storage
    networks:
      - dify_default

  # Dify Web 前端
  web:
    image: langgenius/dify-web:{{ dify_version }}
    restart: always
    environment:
      CONSOLE_API_URL: http://api:5001
      APP_API_URL: http://api:5001
    networks:
      - dify_default

  # 代码沙箱
  sandbox:
    image: langgenius/dify-sandbox:{{ dify_sandbox_version | default('0.2.12') }}
    restart: always
    environment:
      API_KEY: {{ dify_env.SANDBOX_API_KEY }}
      GIN_MODE: release
      WORKER_TIMEOUT: 15
    volumes:
      - "./sandbox-config.yaml:/app/conf/config.yaml"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8194/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - dify_default
      - ssrf_proxy_network

  # 插件守护进程
  plugin_daemon:
    image: langgenius/dify-plugin-daemon:{{ dify_plugin_daemon_version | default('0.2.0-local') }}
    restart: always
    environment:
      SECRET_KEY: {{ dify_env.PLUGIN_DAEMON_KEY }}
      DB_HOST: {{ dify_env.DB_HOST }}
      DB_PORT: {{ dify_env.DB_PORT }}
      DB_USERNAME: {{ dify_env.DB_USERNAME }}
      DB_PASSWORD: {{ dify_env.DB_PASSWORD }}
      DB_DATABASE: dify_plugin
    ports:
      - "{{ dify_plugin_port | default('5003') }}:5003"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - dify_default

  # SSRF 代理
  ssrf_proxy:
    image: ubuntu/squid:latest
    restart: always
    volumes:
      - "./ssrf_proxy.conf:/etc/squid/squid.conf"
    command: ["squid", "-f", "/etc/squid/squid.conf", "-NYCd", "1"]
    networks:
      - ssrf_proxy_network

  # Nginx 反向代理
  nginx:
    image: nginx:latest
    restart: always
    ports:
      - "{{ dify_nginx_port }}:80"
{% if dify_enable_ssl %}
      - "{{ dify_nginx_ssl_port }}:443"
{% endif %}
    volumes:
      - "./nginx.conf:/etc/nginx/nginx.conf"
    depends_on:
      - api
      - web
    networks:
      - dify_default

{% if dify_vector_store == 'weaviate' %}
  # Weaviate 向量数据库
  weaviate:
    image: semitechnologies/weaviate:1.20.7
    restart: always
    environment:
      QUERY_DEFAULTS_LIMIT: 25
      AUTHENTICATION_ANONYMOUS_ACCESS_ENABLED: 'false'
      PERSISTENCE_DATA_PATH: '/var/lib/weaviate'
      DEFAULT_VECTORIZER_MODULE: 'none'
      CLUSTER_HOSTNAME: 'node1'
      AUTHENTICATION_APIKEY_ENABLED: 'true'
      AUTHENTICATION_APIKEY_ALLOWED_KEYS: '{{ dify_env.WEAVIATE_API_KEY }}'
      AUTHENTICATION_APIKEY_USERS: 'hello@dify.ai'
      AUTHORIZATION_ADMINLIST_ENABLED: 'true'
      AUTHORIZATION_ADMINLIST_USERS: 'hello@dify.ai'
    volumes:
      - ./volumes/weaviate:/var/lib/weaviate
    networks:
      - dify_default
{% endif %}