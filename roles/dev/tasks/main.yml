---
- name: 检查是否启用开发工具安装
  ansible.builtin.debug:
    msg: "开发工具安装已启用，目标主机: {{ dev_target_hosts }}"
  when: dev_tools_enabled

- name: 检查当前主机是否在目标主机列表中
  ansible.builtin.set_fact:
    dev_install_on_this_host: "{{ inventory_hostname in dev_target_hosts }}"

- name: 显示主机安装状态
  ansible.builtin.debug:
    msg: "{{ inventory_hostname }}: {{ '将安装开发工具' if dev_install_on_this_host else '跳过安装' }}"

# Charm 仓库配置任务组
- name: 创建 APT keyring 目录
  ansible.builtin.file:
    path: "/etc/apt/keyrings"
    state: directory
    mode: '0755'
    owner: root
    group: root
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled

- name: 下载 Charm GPG 密钥
  ansible.builtin.get_url:
    url: "{{ dev_charm_gpg_key_url }}"
    dest: "/tmp/charm.gpg.key"
    mode: '0644'
    timeout: 30
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
  register: dev_charm_key_download

- name: 安装 Charm GPG 密钥
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      gpg --dearmor < /tmp/charm.gpg.key > {{ dev_charm_keyring_path }}
    executable: /bin/bash
    creates: "{{ dev_charm_keyring_path }}"
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
    - dev_charm_key_download is succeeded

- name: 设置 GPG 密钥文件权限
  ansible.builtin.file:
    path: "{{ dev_charm_keyring_path }}"
    owner: "{{ dev_keyring_owner }}"
    group: "{{ dev_keyring_group }}"
    mode: "{{ dev_keyring_mode }}"
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled

- name: 添加 Charm 软件源
  ansible.builtin.copy:
    content: "{{ dev_charm_repository }}\n"
    dest: "{{ dev_charm_sources_list }}"
    owner: root
    group: root
    mode: "{{ dev_sources_mode }}"
    backup: true
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
  notify: 更新软件包缓存

- name: 更新软件包缓存
  ansible.builtin.apt:
    update_cache: true
    cache_valid_time: 3600
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled

# Crush 安装任务
- name: 安装 Crush AI 编码助手
  ansible.builtin.package:
    name: "{{ dev_crush_package }}"
    state: present
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
    - dev_crush_enabled
  register: dev_crush_install_result

- name: 安装额外的开发工具包
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop: "{{ dev_additional_packages }}"
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_additional_packages | length > 0

# 验证安装结果
- name: 验证 Crush 安装状态
  ansible.builtin.command:
    cmd: crush --version
  register: dev_crush_version_check
  changed_when: false
  failed_when: false
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
    - dev_crush_enabled
    - dev_verify_installation

- name: 显示 Crush 版本信息
  ansible.builtin.debug:
    msg: |
      🎉 Crush AI 编码助手安装验证结果:
      - 安装状态: {{ 'SUCCESS' if dev_crush_version_check.rc == 0 else 'FAILED' }}
      - 版本信息: {{ dev_crush_version_check.stdout if dev_crush_version_check.rc == 0 else '无法获取版本信息' }}
      - 命令位置: /usr/bin/crush
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
    - dev_crush_enabled
    - dev_verify_installation

- name: 验证 GPG 密钥文件完整性
  ansible.builtin.stat:
    path: "{{ dev_charm_keyring_path }}"
  register: dev_gpg_key_stat
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
    - dev_verify_installation

- name: 显示 GPG 密钥验证结果
  ansible.builtin.debug:
    msg: |
      🔐 GPG 密钥验证结果:
      - 文件存在: {{ dev_gpg_key_stat.stat.exists }}
      - 文件大小: {{ dev_gpg_key_stat.stat.size }} bytes
      - 权限设置: {{ dev_gpg_key_stat.stat.mode }}
      - 所有者: {{ dev_gpg_key_stat.stat.pw_name }}:{{ dev_gpg_key_stat.stat.gr_name }}
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_charm_enabled
    - dev_verify_installation

# 安装完成摘要
- name: 显示开发工具安装摘要
  ansible.builtin.debug:
    msg: |
      📦 开发工具安装完成摘要 ({{ inventory_hostname }}):

      ✅ 已安装的工具:
      {% if dev_crush_enabled and dev_install_on_this_host %}
      - Crush AI 编码助手: {{ 'SUCCESS' if dev_crush_install_result is succeeded else 'FAILED' }}
      {% endif %}
      {% if dev_additional_packages | length > 0 and dev_install_on_this_host %}
      - 附加软件包: {{ dev_additional_packages | join(', ') }}
      {% endif %}

      📂 配置文件位置:
      - GPG 密钥: {{ dev_charm_keyring_path }}
      - 软件源: {{ dev_charm_sources_list }}

      🎯 使用说明:
      - 运行 crush --help 查看使用帮助
      - 启动 AI 编码助手: crush
      - 在项目目录中使用: cd your-project && crush

      💡 管理命令:
      - 查看已安装版本: crush --version
      - 更新软件包: sudo apt update && sudo apt upgrade crush
      - 卸载软件: sudo apt remove crush
  when:
    - dev_tools_enabled
    - dev_install_on_this_host

# 清理临时文件
- name: 清理临时下载文件
  ansible.builtin.file:
    path: "/tmp/charm.gpg.key"
    state: absent
  become: true
  when:
    - dev_tools_enabled
    - dev_install_on_this_host
    - dev_cleanup_temp_files
